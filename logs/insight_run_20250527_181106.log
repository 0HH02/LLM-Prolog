
======================================================================
PROCESANDO PROBLEMA 5: "
            Tweedledum y Tweedledee visitaban frecuentemente el bosque.
       ..."
======================================================================

--- CICLO DE REFINAMIENTO 1 / 3 ---
INFO: Checkpoint no encontrado: checkpoints/mfsa_kr_store_Tweedledum_y_Tweedledee_visitaban_frecuentemente_e.pkl. Se ejecutará el módulo correspondiente.

--- Ejecutando MFSA ---

--- Iniciando Formalización Semántica y Axiomatización (MFSA) ---
Descripción del Problema (NL): 
            Tweedledum y Tweedledee visitaban frecuentemente el bosque.
            Ahora bien, uno de los dos es como el León: miente los lunes, martes y miércoles y
            dice la verdad los restantes días de la semana. El otro es como el Unicornio: miente
            los jueves, viernes y sábados y dice la verdad los restantes días de la semana. Alicia
            no sabía que uno era como el León y que otro era como el Unicornio. Para terminar
            de arreglarlo, los hermanos se parecían tanto que Alicia no podía ni siquiera
            distinguirlos (excepto cuando llevaban sus cuellos bordados, cosa que raramente
            hacían). Así pues, la pobre Alicia se encontró realmente en una situación muy
            confusa. He aquí ahora alguna de las aventuras de Alicia con Tweedledum y
            Tweedledee.
            Un día Alicia se encontró a los hermanos juntos que le hablaron así:
            El primero de ellos dijo: Yo soy Tweedledum.
            El segundo dijo: Yo soy Tweedledee.
            ¿Cuál de ellos era realmente Tweedledum y cuál de ellos Tweedledee?


-------------------------------------------------------------------

--- Pregunta a Gemini (initial_analysis_
____________tweedle) ---
Prompt: 
        Hola, necesito tu ayuda para analizar un problema de lógica. Por favor, sigue estos pasos:
        Análisis Paso a Paso del Problema: Describe el problema de lógica que te presentaré a continuación, desglosándolo en sus componentes fundamentales. Explica las entidades involucradas, sus relaciones y las condiciones o restricciones dadas.
        Hipótesis de Solución: Basándote en tu análisis, propón una hipótesis clara sobre cuál podría ser la solución al problema.
        Premisas para Prolog: Identifica y enumera todas las premisas (hechos y reglas) que serían necesarias para modelar y resolver este problema utilizando el lenguaje de programación lógica Prolog. Asegúrate de que estas premisas sean suficientes para llegar a la solución que has hipotetizado.
        A continuación, te presento el problema de lógica:

        
            Tweedledum y Tweedledee visitaban frecuentemente el bosque.
            Ahora bien, uno de los dos es como el León: miente los lunes, martes y miércoles y
            dice la verdad los restantes días de la semana. El otro es como el Unicornio: miente
            los jueves, viernes y sábados y dice la verdad los restantes días de la semana. Alicia
            no sabía que uno era como el León y que otro era como el Unicornio. Para terminar
            de arreglarlo, los hermanos se parecían tanto que Alicia no podía ni siquiera
            distinguirlos (excepto cuando llevaban sus cuellos bordados, cosa que raramente
            hacían). Así pues, la pobre Alicia se encontró realmente en una situación muy
            confusa. He aquí ahora alguna de las aventuras de Alicia con Tweedledum y
            Tweedledee.
            Un día Alicia se encontró a los hermanos juntos que le hablaron así:
            El primero de ellos dijo: Yo soy Tweedledum.
            El segundo dijo: Yo soy Tweedledee.
            ¿Cuál de ellos era realmente Tweedledum y cuál de ellos Tweedledee?
        

-------------------------------------------------------------------

-------------------------------------------------------------------
Respuesta de Gemini: Okay, aquí tienes el análisis paso a paso del problema de lógica, la hipótesis de solución y las premisas necesarias para modelarlo en Prolog.

**Análisis del Problema de Lógica: Tweedledum y Tweedledee**

**1. Descripción General del Problema:**

El problema presenta una situación en la que Alicia se encuentra con dos hermanos, Tweedledum y Tweedledee, que son indistinguibles entre sí y tienen patrones de veracidad/mentira opuestos basados en el día de la semana (tipo León y tipo Unicornio). Alicia no sabe quién es quién ni quién tiene qué patrón de veracidad. En un encuentro, ambos hermanos hacen una afirmación sobre su propia identidad. El objetivo es determinar la identidad real (Tweedledum o Tweedledee) de cada uno de los hermanos basándose en sus afirmaciones y los patrones de veracidad/mentira posibles.

**2. Componentes Fundamentales y Entidades:**

*   **Entidades:**
    *   `Persona1`: El primer hermano que habla.
    *   `Persona2`: El segundo hermano que habla.
    *   `Tweedledum`: Una de las identidades posibles.
    *   `Tweedledee`: La otra identidad posible.
    *   `León`: Un tipo de comportamiento (miente Lun, Mar, Mie; dice verdad Jue, Vie, Sab, Dom).
    *   `Unicornio`: Otro tipo de comportamiento (miente Jue, Vie, Sab; dice verdad Lun, Mar, Mie, Dom).
    *   `Días de la Semana`: Los días relevantes (Lun, Mar, Mie, Jue, Vie, Sab, Dom).
    *   `Alicia`: La observadora, pero no un componente activo en la lógica de la solución en sí, sino parte del contexto de la confusión.

**3. Relaciones y Atributos:**

*   Cada persona (`Persona1`, `Persona2`) tiene una identidad única: o es `Tweedledum` o es `Tweedledee`. No pueden ser la misma persona.
*   Cada persona (`Persona1`, `Persona2`) tiene un tipo de comportamiento único: o es `León` o es `Unicornio`. Uno es León y el otro es Unicornio.
*   Las identidades (`Tweedledum`, `Tweedledee`) están asignadas de forma fija a las personas (`Persona1`, `Persona2`) en la realidad (aunque Alicia no lo sepa).
*   Los tipos de comportamiento (`León`, `Unicornio`) están asignados de forma fija a las personas (`Persona1`, `Persona2`) en la realidad (aunque Alicia no lo sepa).
*   La veracidad o falsedad de lo que dice una persona depende de su tipo (`León` o `Unicornio`) y del día de la semana.
*   **Afirmaciones:**
    *   `Persona1` afirma: "Yo soy Tweedledum."
    *   `Persona2` afirma: "Yo soy Tweedledee."

**4. Condiciones y Restricciones:**

*   `Persona1` y `Persona2` tienen identidades distintas (`Tweedledum`, `Tweedledee`).
*   `Persona1` y `Persona2` tienen tipos de comportamiento distintos (`León`, `Unicornio`).
*   La solución debe ser lógicamente derivable solo de las afirmaciones, los tipos de comportamiento y el hecho de que uno es Tweedledum/León/Unicornio y el otro es Tweedledee/León/Unicornio. La solución no puede depender de información externa no dada (como el día específico del encuentro, aunque la lógica pueda determinar *qué día tuvo que ser* para que la situación sea consistente).
*   Una afirmación hecha por una persona en un día determinado es:
    *   Verdadera **SI** la persona dice la verdad ese día (según su tipo) **Y** el contenido de la afirmación es objetivamente verdadero.
    *   Falsa **SI** la persona miente ese día (según su tipo) **Y** el contenido de la afirmación es objetivamente falso.
    *   (O, de forma equivalente y más útil para la lógica):
        *   Una persona que dice la verdad ese día **DEBE** hacer una afirmación objetivamente verdadera.
        *   Una persona que miente ese día **DEBE** hacer una afirmación objetivamente falsa.

**5. Análisis Lógico de las Afirmaciones:**

Vamos a considerar las dos posibles asignaciones de identidad a `Persona1` y `Persona2`:

*   **Posibilidad 1: `Persona1` es `Tweedledum` y `Persona2` es `Tweedledee`.**
    *   `Persona1` dice: "Yo soy Tweedledum". Bajo esta posibilidad, esta afirmación es objetivamente **Verdadera**.
    *   `Persona2` dice: "Yo soy Tweedledee". Bajo esta posibilidad, esta afirmación es objetivamente **Verdadera**.
    *   Para que esto sea consistente, `Persona1` (diciendo la verdad) debe estar en un día en el que su tipo dice la verdad, Y `Persona2` (diciendo la verdad) debe estar en un día en el que su tipo dice la verdad.
    *   Consideremos las asignaciones de tipo bajo esta identidad:
        *   *Subcaso 1a:* `Persona1` (`Tweedledum`) es `León`, `Persona2` (`Tweedledee`) es `Unicornio`.
            *   `Persona1` (`León`) dice verdad: Días Jue, Vie, Sab, Dom.
            *   `Persona2` (`Unicornio`) dice verdad: Días Lun, Mar, Mie, Dom.
            *   Para que *ambos* digan la verdad, el día debe ser un día en el que ambos tipos digan la verdad. La intersección es el **Domingo**.
            *   Esto es consistente si el encuentro ocurrió un domingo.
        *   *Subcaso 1b:* `Persona1` (`Tweedledum`) es `Unicornio`, `Persona2` (`Tweedledee`) es `León`.
            *   `Persona1` (`Unicornio`) dice verdad: Días Lun, Mar, Mie, Dom.
            *   `Persona2` (`León`) dice verdad: Días Jue, Vie, Sab, Dom.
            *   La intersección donde ambos dicen la verdad es el **Domingo**.
            *   Esto es consistente si el encuentro ocurrió un domingo.
    *   **Conclusión Parcial 1:** Si `Persona1` es `Tweedledum` y `Persona2` es `Tweedledee`, entonces sus afirmaciones son verdaderas, y esto solo es posible si el día del encuentro fue un Domingo (independientemente de quién sea León y quién Unicornio entre ellos).

*   **Posibilidad 2: `Persona1` es `Tweedledee` y `Persona2` es `Tweedledum`.**
    *   `Persona1` dice: "Yo soy Tweedledum". Bajo esta posibilidad, esta afirmación es objetivamente **Falsa** (ya que `Persona1` es `Tweedledee`).
    *   `Persona2` dice: "Yo soy Tweedledee". Bajo esta posibilidad, esta afirmación es objetivamente **Falsa** (ya que `Persona2` es `Tweedledum`).
    *   Para que esto sea consistente, `Persona1` (diciendo una falsedad) debe estar en un día en el que su tipo miente, Y `Persona2` (diciendo una falsedad) debe estar en un día en el que su tipo miente.
    *   Consideremos las asignaciones de tipo bajo esta identidad:
        *   *Subcaso 2a:* `Persona1` (`Tweedledee`) es `León`, `Persona2` (`Tweedledum`) es `Unicornio`.
            *   `Persona1` (`León`) miente: Días Lun, Mar, Mie.
            *   `Persona2` (`Unicornio`) miente: Días Jue, Vie, Sab.
            *   Para que *ambos* mientan, el día debe ser un día en el que ambos tipos mientan. La intersección es el conjunto vacío **{}**. ¡No hay ningún día en que esto sea posible!
        *   *Subcaso 2b:* `Persona1` (`Tweedledee`) es `Unicornio`, `Persona2` (`Tweedledum`) es `León`.
            *   `Persona1` (`Unicornio`) miente: Días Jue, Vie, Sab.
            *   `Persona2` (`León`) miente: Días Lun, Mar, Mie.
            *   La intersección donde ambos mienten es el conjunto vacío **{}**. ¡No hay ningún día en que esto sea posible!
    *   **Conclusión Parcial 2:** Si `Persona1` es `Tweedledee` y `Persona2` es `Tweedledum`, entonces sus afirmaciones son falsas, pero no existe ningún día de la semana en el que tanto el tipo León como el tipo Unicornio mientan simultáneamente. Esta posibilidad de identidad lleva a una contradicción lógica irresoluble.

**6. Conclusión Final del Análisis:**

La única asignación de identidad entre `Persona1` y `Persona2` que es lógicamente consistente con sus afirmaciones y los patrones de veracidad/mentira de los tipos León y Unicornio (teniendo uno de cada tipo) es que `Persona1` sea `Tweedledum` y `Persona2` sea `Tweedledee`. Esta situación solo es posible si el encuentro ocurrió un domingo, pero la identidad de cada hermano se determina inequívocamente independientemente de saber *a priori* que era domingo.

**Hipótesis de Solución**

Basado en el análisis lógico, la hipótesis es que el primer hermano (el que dijo "Yo soy Tweedledum") es realmente Tweedledum, y el segundo hermano (el que dijo "Yo soy Tweedledee") es realmente Tweedledee.

**Premisas para Prolog**

Para modelar este problema en Prolog, necesitamos representar los hechos conocidos y las reglas lógicas que rigen el comportamiento de los hermanos.

```prolog
% Hechos básicos: Días de la semana
dia(lunes).
dia(martes).
dia(miercoles).
dia(jueves).
dia(viernes).
dia(sabado).
dia(domingo).

% Hechos básicos: Tipos de comportamiento
tipo(lion).
tipo(unicorn).

% Hechos básicos: Identidades
identidad(tweedledum).
identidad(tweedledee).

% Hechos: Patrones de veracidad/mentira por tipo y día
% Leon: miente Lun, Mar, Mie; dice verdad Jue, Vie, Sab, Dom
dice_verdad(lion, jueves).
dice_verdad(lion, viernes).
dice_verdad(lion, sabado).
dice_verdad(lion, domingo).
miente(lion, lunes).
miente(lion, martes).
miente(lion, miercoles).

% Unicornio: miente Jue, Vie, Sab; dice verdad Lun, Mar, Mie, Dom
dice_verdad(unicorn, lunes).
dice_verdad(unicorn, martes).
dice_verdad(unicorn, miercoles).
dice_verdad(unicorn, domingo).
miente(unicorn, jueves).
miente(unicorn, viernes).
miente(unicorn, sabado).

% Hechos: Quién hizo qué afirmación (asociamos 'persona1' y 'persona2' a los hablantes)
reclama_identidad(persona1, tweedledum).
reclama_identidad(persona2, tweedledee).

% Regla: Una afirmación es objetivamente verdadera si la identidad reclamada es la identidad real de la persona.
afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada) :-
    IdentidadReal = IdentidadReclamada.

% Regla: Una afirmación es objetivamente falsa si no es objetivamente verdadera.
afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada) :-
    \+ afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada).

% Regla: El enunciado de una persona es consistente con su tipo y el día si...
% ... la afirmación es verdadera Y la persona dice la verdad ese día, O
% ... la afirmación es falsa Y la persona miente ese día.
es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :-
    afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada),
    dice_verdad(TipoPersona, Dia).

es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :-
    afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada),
    miente(TipoPersona, Dia).

% Meta/Consulta Principal: Encontrar una asignación de identidad y tipo a persona1 y persona2,
% y un día, tal que todas las condiciones sean consistentes.
% Buscamos Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro
problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro) :-
    % Las identidades de persona1 y persona2 deben ser tweedledum y tweedledee (una cada una)
    (Identidad1 = tweedledum, Identidad2 = tweedledee ; Identidad1 = tweedledee, Identidad2 = tweedledum),
    Identidad1 \= Identidad2, % Asegura que no son la misma identidad

    % Los tipos de persona1 y persona2 deben ser lion y unicorn (uno cada uno)
    (Tipo1 = lion, Tipo2 = unicorn ; Tipo1 = unicorn, Tipo2 = lion),
    Tipo1 \= Tipo2, % Asegura que no son el mismo tipo

    % Debe existir un día tal que los enunciados sean consistentes para AMBAS personas
    dia(DiaEncuentro),

    % Consistencia del enunciado de persona1
    reclama_identidad(persona1, Reclama1),
    es_consistente_enunciado(persona1, Identidad1, Tipo1, Reclama1, DiaEncuentro),

    % Consistencia del enunciado de persona2
    reclama_identidad(persona2, Reclama2),
    es_consistente_enunciado(persona2, Identidad2, Tipo2, Reclama2, DiaEncuentro).

% Para ejecutar en Prolog y encontrar la solución(es):
% ?- problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro).
```

Al ejecutar la consulta `problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro).` en un intérprete de Prolog con estas premisas cargadas, Prolog buscará todas las combinaciones de `Identidad1`, `Identidad2`, `Tipo1`, `Tipo2` y `DiaEncuentro` que satisfagan todas las condiciones. Verificará las dos posibles asignaciones de identidad y las dos posibles asignaciones de tipo para cada día, y solo las combinaciones lógicamente consistentes tendrán éxito. Como mostró el análisis, solo una asignación de identidad (`Identidad1=tweedledum`, `Identidad2=tweedledee`) resultará en soluciones, y estas soluciones además especificarán que el día debe haber sido domingo. Sin embargo, la parte importante es la determinación de `Identidad1` e `Identidad2`.

-------------------------------------------------------------------




-------------------------------------------------------------------

--- Pregunta a Gemini JSON (general) ---
Prompt: 
        Hola, basándote en tu respuesta anterior sobre el problema de lógica de Tweedledum y Tweedledee (la cual he incluido al final de este prompt para tu referencia), necesito que extraigas y estructures la información de la siguiente manera en un formato JSON:

        El JSON debe tener tres claves principales en el nivel raíz:

        "facts": Un array de strings, donde cada string es un hecho Prolog completo tal como lo definiste.
        "rules": Un array de strings, donde cada string es una regla Prolog completa tal como la definiste.
        "objective": Un string que represente la consulta principal de Prolog que se usaría para obtener la solución (por ejemplo, solucion(Tweedledum, Tweedledee).).

        Consejos importantes para asegurar la compatibilidad con Prolog al generar los strings de hechos y reglas:
            Átomos: Los nombres de predicados y las constantes (átomos) en Prolog deben comenzar con una letra minúscula. Si un átomo necesita contener espacios, caracteres especiales, o comenzar con una letra mayúscula, debe ir entre comillas simples (ej: 'Yo soy Fidel', 'Luna').
            Variables: Las variables en Prolog siempre comienzan con una letra mayúscula o un guion bajo (ej: Dia, Hermano, _Ignorado).
            Sintaxis de Hechos: Asegúrate de que cada hecho termine con un punto (.). Ejemplo: miente_leon(lunes).
            Sintaxis de Reglas: Las reglas deben seguir el formato cabeza :- cuerpo., donde cabeza es la conclusión, :- significa "si", y cuerpo puede ser una o más metas separadas por comas (,) que representan una conjunción lógica. Cada regla debe terminar con un punto (.). Ejemplo: dice_verdad(leon, Dia) :- + miente_leon(Dia).
            Strings dentro de Prolog: Las frases como "Yo soy Fidel" deben ser tratadas como átomos en Prolog, es decir, encerradas en comillas simples si contienen espacios o mayúsculas no iniciales (ej: 'Yo soy Fidel').
            Escapado en JSON: Dado que los hechos y reglas de Prolog serán strings dentro de un JSON, si alguna vez usaras comillas dobles dentro de tu código Prolog (lo cual es menos común para átomos que las comillas simples), necesitarían ser escapadas (") dentro del string JSON. Usar comillas simples para los átomos Prolog evita este problema. Las barras invertidas () en Prolog (como en + para negación) son caracteres válidos y no necesitan doble escapado a menos que el propio string JSON lo requiera para el carácter .
            Los símbolos correctos de prolog son: \+ para negación, :- para implicación, ; para disyunción, . para final de cláusula, = para unificación, \= para desigualdad.
            Evita usar el \ innecesariamente puesto a que por si solo es un error de sintaxis

        Problema original:
            
            Tweedledum y Tweedledee visitaban frecuentemente el bosque.
            Ahora bien, uno de los dos es como el León: miente los lunes, martes y miércoles y
            dice la verdad los restantes días de la semana. El otro es como el Unicornio: miente
            los jueves, viernes y sábados y dice la verdad los restantes días de la semana. Alicia
            no sabía que uno era como el León y que otro era como el Unicornio. Para terminar
            de arreglarlo, los hermanos se parecían tanto que Alicia no podía ni siquiera
            distinguirlos (excepto cuando llevaban sus cuellos bordados, cosa que raramente
            hacían). Así pues, la pobre Alicia se encontró realmente en una situación muy
            confusa. He aquí ahora alguna de las aventuras de Alicia con Tweedledum y
            Tweedledee.
            Un día Alicia se encontró a los hermanos juntos que le hablaron así:
            El primero de ellos dijo: Yo soy Tweedledum.
            El segundo dijo: Yo soy Tweedledee.
            ¿Cuál de ellos era realmente Tweedledum y cuál de ellos Tweedledee?

        Por favor, procesa la siguiente respuesta tuya y genera el JSON:
        Tu respuesta: 
            Okay, aquí tienes el análisis paso a paso del problema de lógica, la hipótesis de solución y las premisas necesarias para modelarlo en Prolog.

**Análisis del Problema de Lógica: Tweedledum y Tweedledee**

**1. Descripción General del Problema:**

El problema presenta una situación en la que Alicia se encuentra con dos hermanos, Tweedledum y Tweedledee, que son indistinguibles entre sí y tienen patrones de veracidad/mentira opuestos basados en el día de la semana (tipo León y tipo Unicornio). Alicia no sabe quién es quién ni quién tiene qué patrón de veracidad. En un encuentro, ambos hermanos hacen una afirmación sobre su propia identidad. El objetivo es determinar la identidad real (Tweedledum o Tweedledee) de cada uno de los hermanos basándose en sus afirmaciones y los patrones de veracidad/mentira posibles.

**2. Componentes Fundamentales y Entidades:**

*   **Entidades:**
    *   `Persona1`: El primer hermano que habla.
    *   `Persona2`: El segundo hermano que habla.
    *   `Tweedledum`: Una de las identidades posibles.
    *   `Tweedledee`: La otra identidad posible.
    *   `León`: Un tipo de comportamiento (miente Lun, Mar, Mie; dice verdad Jue, Vie, Sab, Dom).
    *   `Unicornio`: Otro tipo de comportamiento (miente Jue, Vie, Sab; dice verdad Lun, Mar, Mie, Dom).
    *   `Días de la Semana`: Los días relevantes (Lun, Mar, Mie, Jue, Vie, Sab, Dom).
    *   `Alicia`: La observadora, pero no un componente activo en la lógica de la solución en sí, sino parte del contexto de la confusión.

**3. Relaciones y Atributos:**

*   Cada persona (`Persona1`, `Persona2`) tiene una identidad única: o es `Tweedledum` o es `Tweedledee`. No pueden ser la misma persona.
*   Cada persona (`Persona1`, `Persona2`) tiene un tipo de comportamiento único: o es `León` o es `Unicornio`. Uno es León y el otro es Unicornio.
*   Las identidades (`Tweedledum`, `Tweedledee`) están asignadas de forma fija a las personas (`Persona1`, `Persona2`) en la realidad (aunque Alicia no lo sepa).
*   Los tipos de comportamiento (`León`, `Unicornio`) están asignados de forma fija a las personas (`Persona1`, `Persona2`) en la realidad (aunque Alicia no lo sepa).
*   La veracidad o falsedad de lo que dice una persona depende de su tipo (`León` o `Unicornio`) y del día de la semana.
*   **Afirmaciones:**
    *   `Persona1` afirma: "Yo soy Tweedledum."
    *   `Persona2` afirma: "Yo soy Tweedledee."

**4. Condiciones y Restricciones:**

*   `Persona1` y `Persona2` tienen identidades distintas (`Tweedledum`, `Tweedledee`).
*   `Persona1` y `Persona2` tienen tipos de comportamiento distintos (`León`, `Unicornio`).
*   La solución debe ser lógicamente derivable solo de las afirmaciones, los tipos de comportamiento y el hecho de que uno es Tweedledum/León/Unicornio y el otro es Tweedledee/León/Unicornio. La solución no puede depender de información externa no dada (como el día específico del encuentro, aunque la lógica pueda determinar *qué día tuvo que ser* para que la situación sea consistente).
*   Una afirmación hecha por una persona en un día determinado es:
    *   Verdadera **SI** la persona dice la verdad ese día (según su tipo) **Y** el contenido de la afirmación es objetivamente verdadero.
    *   Falsa **SI** la persona miente ese día (según su tipo) **Y** el contenido de la afirmación es objetivamente falso.
    *   (O, de forma equivalente y más útil para la lógica):
        *   Una persona que dice la verdad ese día **DEBE** hacer una afirmación objetivamente verdadera.
        *   Una persona que miente ese día **DEBE** hacer una afirmación objetivamente falsa.

**5. Análisis Lógico de las Afirmaciones:**

Vamos a considerar las dos posibles asignaciones de identidad a `Persona1` y `Persona2`:

*   **Posibilidad 1: `Persona1` es `Tweedledum` y `Persona2` es `Tweedledee`.**
    *   `Persona1` dice: "Yo soy Tweedledum". Bajo esta posibilidad, esta afirmación es objetivamente **Verdadera**.
    *   `Persona2` dice: "Yo soy Tweedledee". Bajo esta posibilidad, esta afirmación es objetivamente **Verdadera**.
    *   Para que esto sea consistente, `Persona1` (diciendo la verdad) debe estar en un día en el que su tipo dice la verdad, Y `Persona2` (diciendo la verdad) debe estar en un día en el que su tipo dice la verdad.
    *   Consideremos las asignaciones de tipo bajo esta identidad:
        *   *Subcaso 1a:* `Persona1` (`Tweedledum`) es `León`, `Persona2` (`Tweedledee`) es `Unicornio`.
            *   `Persona1` (`León`) dice verdad: Días Jue, Vie, Sab, Dom.
            *   `Persona2` (`Unicornio`) dice verdad: Días Lun, Mar, Mie, Dom.
            *   Para que *ambos* digan la verdad, el día debe ser un día en el que ambos tipos digan la verdad. La intersección es el **Domingo**.
            *   Esto es consistente si el encuentro ocurrió un domingo.
        *   *Subcaso 1b:* `Persona1` (`Tweedledum`) es `Unicornio`, `Persona2` (`Tweedledee`) es `León`.
            *   `Persona1` (`Unicornio`) dice verdad: Días Lun, Mar, Mie, Dom.
            *   `Persona2` (`León`) dice verdad: Días Jue, Vie, Sab, Dom.
            *   La intersección donde ambos dicen la verdad es el **Domingo**.
            *   Esto es consistente si el encuentro ocurrió un domingo.
    *   **Conclusión Parcial 1:** Si `Persona1` es `Tweedledum` y `Persona2` es `Tweedledee`, entonces sus afirmaciones son verdaderas, y esto solo es posible si el día del encuentro fue un Domingo (independientemente de quién sea León y quién Unicornio entre ellos).

*   **Posibilidad 2: `Persona1` es `Tweedledee` y `Persona2` es `Tweedledum`.**
    *   `Persona1` dice: "Yo soy Tweedledum". Bajo esta posibilidad, esta afirmación es objetivamente **Falsa** (ya que `Persona1` es `Tweedledee`).
    *   `Persona2` dice: "Yo soy Tweedledee". Bajo esta posibilidad, esta afirmación es objetivamente **Falsa** (ya que `Persona2` es `Tweedledum`).
    *   Para que esto sea consistente, `Persona1` (diciendo una falsedad) debe estar en un día en el que su tipo miente, Y `Persona2` (diciendo una falsedad) debe estar en un día en el que su tipo miente.
    *   Consideremos las asignaciones de tipo bajo esta identidad:
        *   *Subcaso 2a:* `Persona1` (`Tweedledee`) es `León`, `Persona2` (`Tweedledum`) es `Unicornio`.
            *   `Persona1` (`León`) miente: Días Lun, Mar, Mie.
            *   `Persona2` (`Unicornio`) miente: Días Jue, Vie, Sab.
            *   Para que *ambos* mientan, el día debe ser un día en el que ambos tipos mientan. La intersección es el conjunto vacío **{}**. ¡No hay ningún día en que esto sea posible!
        *   *Subcaso 2b:* `Persona1` (`Tweedledee`) es `Unicornio`, `Persona2` (`Tweedledum`) es `León`.
            *   `Persona1` (`Unicornio`) miente: Días Jue, Vie, Sab.
            *   `Persona2` (`León`) miente: Días Lun, Mar, Mie.
            *   La intersección donde ambos mienten es el conjunto vacío **{}**. ¡No hay ningún día en que esto sea posible!
    *   **Conclusión Parcial 2:** Si `Persona1` es `Tweedledee` y `Persona2` es `Tweedledum`, entonces sus afirmaciones son falsas, pero no existe ningún día de la semana en el que tanto el tipo León como el tipo Unicornio mientan simultáneamente. Esta posibilidad de identidad lleva a una contradicción lógica irresoluble.

**6. Conclusión Final del Análisis:**

La única asignación de identidad entre `Persona1` y `Persona2` que es lógicamente consistente con sus afirmaciones y los patrones de veracidad/mentira de los tipos León y Unicornio (teniendo uno de cada tipo) es que `Persona1` sea `Tweedledum` y `Persona2` sea `Tweedledee`. Esta situación solo es posible si el encuentro ocurrió un domingo, pero la identidad de cada hermano se determina inequívocamente independientemente de saber *a priori* que era domingo.

**Hipótesis de Solución**

Basado en el análisis lógico, la hipótesis es que el primer hermano (el que dijo "Yo soy Tweedledum") es realmente Tweedledum, y el segundo hermano (el que dijo "Yo soy Tweedledee") es realmente Tweedledee.

**Premisas para Prolog**

Para modelar este problema en Prolog, necesitamos representar los hechos conocidos y las reglas lógicas que rigen el comportamiento de los hermanos.

```prolog
% Hechos básicos: Días de la semana
dia(lunes).
dia(martes).
dia(miercoles).
dia(jueves).
dia(viernes).
dia(sabado).
dia(domingo).

% Hechos básicos: Tipos de comportamiento
tipo(lion).
tipo(unicorn).

% Hechos básicos: Identidades
identidad(tweedledum).
identidad(tweedledee).

% Hechos: Patrones de veracidad/mentira por tipo y día
% Leon: miente Lun, Mar, Mie; dice verdad Jue, Vie, Sab, Dom
dice_verdad(lion, jueves).
dice_verdad(lion, viernes).
dice_verdad(lion, sabado).
dice_verdad(lion, domingo).
miente(lion, lunes).
miente(lion, martes).
miente(lion, miercoles).

% Unicornio: miente Jue, Vie, Sab; dice verdad Lun, Mar, Mie, Dom
dice_verdad(unicorn, lunes).
dice_verdad(unicorn, martes).
dice_verdad(unicorn, miercoles).
dice_verdad(unicorn, domingo).
miente(unicorn, jueves).
miente(unicorn, viernes).
miente(unicorn, sabado).

% Hechos: Quién hizo qué afirmación (asociamos 'persona1' y 'persona2' a los hablantes)
reclama_identidad(persona1, tweedledum).
reclama_identidad(persona2, tweedledee).

% Regla: Una afirmación es objetivamente verdadera si la identidad reclamada es la identidad real de la persona.
afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada) :-
    IdentidadReal = IdentidadReclamada.

% Regla: Una afirmación es objetivamente falsa si no es objetivamente verdadera.
afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada) :-
    \+ afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada).

% Regla: El enunciado de una persona es consistente con su tipo y el día si...
% ... la afirmación es verdadera Y la persona dice la verdad ese día, O
% ... la afirmación es falsa Y la persona miente ese día.
es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :-
    afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada),
    dice_verdad(TipoPersona, Dia).

es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :-
    afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada),
    miente(TipoPersona, Dia).

% Meta/Consulta Principal: Encontrar una asignación de identidad y tipo a persona1 y persona2,
% y un día, tal que todas las condiciones sean consistentes.
% Buscamos Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro
problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro) :-
    % Las identidades de persona1 y persona2 deben ser tweedledum y tweedledee (una cada una)
    (Identidad1 = tweedledum, Identidad2 = tweedledee ; Identidad1 = tweedledee, Identidad2 = tweedledum),
    Identidad1 \= Identidad2, % Asegura que no son la misma identidad

    % Los tipos de persona1 y persona2 deben ser lion y unicorn (uno cada uno)
    (Tipo1 = lion, Tipo2 = unicorn ; Tipo1 = unicorn, Tipo2 = lion),
    Tipo1 \= Tipo2, % Asegura que no son el mismo tipo

    % Debe existir un día tal que los enunciados sean consistentes para AMBAS personas
    dia(DiaEncuentro),

    % Consistencia del enunciado de persona1
    reclama_identidad(persona1, Reclama1),
    es_consistente_enunciado(persona1, Identidad1, Tipo1, Reclama1, DiaEncuentro),

    % Consistencia del enunciado de persona2
    reclama_identidad(persona2, Reclama2),
    es_consistente_enunciado(persona2, Identidad2, Tipo2, Reclama2, DiaEncuentro).

% Para ejecutar en Prolog y encontrar la solución(es):
% ?- problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro).
```

Al ejecutar la consulta `problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro).` en un intérprete de Prolog con estas premisas cargadas, Prolog buscará todas las combinaciones de `Identidad1`, `Identidad2`, `Tipo1`, `Tipo2` y `DiaEncuentro` que satisfagan todas las condiciones. Verificará las dos posibles asignaciones de identidad y las dos posibles asignaciones de tipo para cada día, y solo las combinaciones lógicamente consistentes tendrán éxito. Como mostró el análisis, solo una asignación de identidad (`Identidad1=tweedledum`, `Identidad2=tweedledee`) resultará en soluciones, y estas soluciones además especificarán que el día debe haber sido domingo. Sin embargo, la parte importante es la determinación de `Identidad1` e `Identidad2`.
        

-------------------------------------------------------------------

-------------------------------------------------------------------
Respuesta JSON de Gemini: {
  "facts": [
    "dia(lunes).",
    "dia(martes).",
    "dia(miercoles).",
    "dia(jueves).",
    "dia(viernes).",
    "dia(sabado).",
    "dia(domingo).",
    "tipo(lion).",
    "tipo(unicorn).",
    "identidad(tweedledum).",
    "identidad(tweedledee).",
    "dice_verdad(lion, jueves).",
    "dice_verdad(lion, viernes).",
    "dice_verdad(lion, sabado).",
    "dice_verdad(lion, domingo).",
    "miente(lion, lunes).",
    "miente(lion, martes).",
    "miente(lion, miercoles).",
    "dice_verdad(unicorn, lunes).",
    "dice_verdad(unicorn, martes).",
    "dice_verdad(unicorn, miercoles).",
    "dice_verdad(unicorn, domingo).",
    "miente(unicorn, jueves).",
    "miente(unicorn, viernes).",
    "miente(unicorn, sabado).",
    "reclama_identidad(persona1, tweedledum).",
    "reclama_identidad(persona2, tweedledee)."
  ],
  "rules": [
    "afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada) :- IdentidadReal = IdentidadReclamada.",
    "afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada) :- \\+ afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada).",
    "es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :- afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada), dice_verdad(TipoPersona, Dia).",
    "es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :- afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada), miente(TipoPersona, Dia).",
    "problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro) :- (Identidad1 = tweedledum, Identidad2 = tweedledee ; Identidad1 = tweedledee, Identidad2 = tweedledum), Identidad1 \\= Identidad2, (Tipo1 = lion, Tipo2 = unicorn ; Tipo1 = unicorn, Tipo2 = lion), Tipo1 \\= Tipo2, dia(DiaEncuentro), reclama_identidad(persona1, Reclama1), es_consistente_enunciado(persona1, Identidad1, Tipo1, Reclama1, DiaEncuentro), reclama_identidad(persona2, Reclama2), es_consistente_enunciado(persona2, Identidad2, Tipo2, Reclama2, DiaEncuentro)."
  ],
  "objetive": [
    "problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro)."
  ]
}

-------------------------------------------------------------------


MFSA: Cláusulas del Problema Extraídas: 32

--- Cláusulas Extraídas ---

Cláusulas Objetivo:
- problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro).

Cláusulas del Problema:
- dia(lunes).
- dia(martes).
- dia(miercoles).
- dia(jueves).
- dia(viernes).
- dia(sabado).
- dia(domingo).
- tipo(lion).
- tipo(unicorn).
- identidad(tweedledum).
- identidad(tweedledee).
- dice_verdad(lion, jueves).
- dice_verdad(lion, viernes).
- dice_verdad(lion, sabado).
- dice_verdad(lion, domingo).
- miente(lion, lunes).
- miente(lion, martes).
- miente(lion, miercoles).
- dice_verdad(unicorn, lunes).
- dice_verdad(unicorn, martes).
- dice_verdad(unicorn, miercoles).
- dice_verdad(unicorn, domingo).
- miente(unicorn, jueves).
- miente(unicorn, viernes).
- miente(unicorn, sabado).
- reclama_identidad(persona1, tweedledum).
- reclama_identidad(persona2, tweedledee).
- afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada) :- IdentidadReal = IdentidadReclamada.
- afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada) :- \+ afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada).
- es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :- afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada), dice_verdad(TipoPersona, Dia).
- es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :- afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada), miente(TipoPersona, Dia).
- problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro) :- (Identidad1 = tweedledum, Identidad2 = tweedledee ; Identidad1 = tweedledee, Identidad2 = tweedledum), Identidad1 \= Identidad2, (Tipo1 = lion, Tipo2 = unicorn ; Tipo1 = unicorn, Tipo2 = lion), Tipo1 \= Tipo2, dia(DiaEncuentro), reclama_identidad(persona1, Reclama1), es_consistente_enunciado(persona1, Identidad1, Tipo1, Reclama1, DiaEncuentro), reclama_identidad(persona2, Reclama2), es_consistente_enunciado(persona2, Identidad2, Tipo2, Reclama2, DiaEncuentro).

Axiomas Base:
--- Formalización Completada ---
KR-Store:
  Axiomas Base: 0
  Cláusulas del Problema: 32
  Cláusulas Objetivo: 1
INFO: Checkpoint guardado: checkpoints/mfsa_kr_store_Tweedledum_y_Tweedledee_visitaban_frecuentemente_e.pkl

INFO: Cláusula Objetivo Principal: problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro).
INFO: Checkpoint no encontrado: checkpoints/misa_j_trace_cycle0_Tweedledum_y_Tweedledee_visitaban_frecuentemente_e.pkl. Se ejecutará el módulo correspondiente.

--- Ejecutando MISA-J (CFCS) ---
Programa Prolog: dia(lunes).
dia(martes).
dia(miercoles).
dia(jueves).
dia(viernes).
dia(sabado).
dia(domingo).
tipo(lion).
tipo(unicorn).
identidad(tweedledum).
identidad(tweedledee).
dice_verdad(lion, jueves).
dice_verdad(lion, viernes).
dice_verdad(lion, sabado).
dice_verdad(lion, domingo).
miente(lion, lunes).
miente(lion, martes).
miente(lion, miercoles).
dice_verdad(unicorn, lunes).
dice_verdad(unicorn, martes).
dice_verdad(unicorn, miercoles).
dice_verdad(unicorn, domingo).
miente(unicorn, jueves).
miente(unicorn, viernes).
miente(unicorn, sabado).
reclama_identidad(persona1, tweedledum).
reclama_identidad(persona2, tweedledee).
afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada) :- IdentidadReal = IdentidadReclamada.
afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada) :- \+ afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada).
es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :- afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada), dice_verdad(TipoPersona, Dia).
es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :- afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada), miente(TipoPersona, Dia).
problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro) :- (Identidad1 = tweedledum, Identidad2 = tweedledee ; Identidad1 = tweedledee, Identidad2 = tweedledum), Identidad1 \= Identidad2, (Tipo1 = lion, Tipo2 = unicorn ; Tipo1 = unicorn, Tipo2 = lion), Tipo1 \= Tipo2, dia(DiaEncuentro), reclama_identidad(persona1, Reclama1), es_consistente_enunciado(persona1, Identidad1, Tipo1, Reclama1, DiaEncuentro), reclama_identidad(persona2, Reclama2), es_consistente_enunciado(persona2, Identidad2, Tipo2, Reclama2, DiaEncuentro).
--- Traza cruda de Prolog ---
Warning: /tmp/tmpjhdu7np4.pl:19:
Warning:    Clauses of dice_verdad/2 are not together in the source-file
Warning:    Earlier definition at /tmp/tmpjhdu7np4.pl:12
Warning:    Current predicate: miente/2
Warning:    Use :- discontiguous dice_verdad/2. to suppress this message
Warning: /tmp/tmpjhdu7np4.pl:23:
Warning:    Clauses of miente/2 are not together in the source-file
Warning:    Earlier definition at /tmp/tmpjhdu7np4.pl:16
Warning:    Current predicate: dice_verdad/2
Warning:    Use :- discontiguous miente/2. to suppress this message
Warning: /tmp/tmpjhdu7np4.pl:28:
Warning:    Singleton variables: [Persona]
^  Call: (10) catch((problema_tweedle(_4664, _4666, _4668, _4670, _4672), fail), _4684, (format(user_error, '~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n', [_4684]), fail))
   Call: (12) problema_tweedle(_4664, _4666, _4668, _4670, _4672)
   Call: (13) _4664=tweedledum
   Exit: (13) tweedledum=tweedledum
   Call: (13) _4666=tweedledee
   Exit: (13) tweedledee=tweedledee
   Call: (13) tweedledum\=tweedledee
   Exit: (13) tweedledum\=tweedledee
   Call: (13) _4668=lion
   Exit: (13) lion=lion
   Call: (13) _4670=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) lion\=unicorn
   Exit: (13) lion\=unicorn
   Call: (13) dia(_4672)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _26300)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, lunes)
   Fail: (14) dice_verdad(lion, lunes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, lunes)
   Redo: (13) dia(_4672)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _37982)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, martes)
   Fail: (14) dice_verdad(lion, martes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, martes)
   Redo: (13) dia(_4672)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _49664)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, miercoles)
   Fail: (14) dice_verdad(lion, miercoles)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, miercoles)
   Redo: (13) dia(_4672)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _61346)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, jueves)
   Exit: (14) dice_verdad(lion, jueves)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Call: (13) reclama_identidad(persona2, _2446)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, jueves)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, jueves)
   Fail: (14) dice_verdad(unicorn, jueves)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, jueves)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, jueves)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _19064)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, viernes)
   Exit: (14) dice_verdad(lion, viernes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Call: (13) reclama_identidad(persona2, _25218)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, viernes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, viernes)
   Fail: (14) dice_verdad(unicorn, viernes)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, viernes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, viernes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _41836)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, sabado)
   Exit: (14) dice_verdad(lion, sabado)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Call: (13) reclama_identidad(persona2, _47990)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, sabado)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, sabado)
   Fail: (14) dice_verdad(unicorn, sabado)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, sabado)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, sabado)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _64608)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, domingo)
   Exit: (14) dice_verdad(lion, domingo)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Call: (13) reclama_identidad(persona2, _5668)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, domingo)
   Exit: (14) dice_verdad(unicorn, domingo)
   Exit: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Exit: (12) problema_tweedle(tweedledum, tweedledee, lion, unicorn, domingo)
   Call: (12) fail
   Fail: (12) fail
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Redo: (14) dice_verdad(lion, domingo)
   Fail: (14) dice_verdad(lion, domingo)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Redo: (12) problema_tweedle(tweedledum, tweedledee, _54, _56, _58)
   Call: (13) _54=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) _56=lion
   Exit: (13) lion=lion
   Call: (13) unicorn\=lion
   Exit: (13) unicorn\=lion
   Call: (13) dia(_58)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _30254)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, lunes)
   Exit: (14) dice_verdad(unicorn, lunes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Call: (13) reclama_identidad(persona2, _36408)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, lunes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, lunes)
   Fail: (14) dice_verdad(lion, lunes)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, lunes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, lunes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Redo: (13) dia(_58)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _53026)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, martes)
   Exit: (14) dice_verdad(unicorn, martes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Call: (13) reclama_identidad(persona2, _59180)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, martes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, martes)
   Fail: (14) dice_verdad(lion, martes)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, martes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, martes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Redo: (13) dia(_58)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _10616)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, miercoles)
   Exit: (14) dice_verdad(unicorn, miercoles)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Call: (13) reclama_identidad(persona2, _16770)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, miercoles)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, miercoles)
   Fail: (14) dice_verdad(lion, miercoles)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, miercoles)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, miercoles)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Redo: (13) dia(_58)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _33388)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, jueves)
   Fail: (14) dice_verdad(unicorn, jueves)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _45070)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, viernes)
   Fail: (14) dice_verdad(unicorn, viernes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _56752)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, sabado)
   Fail: (14) dice_verdad(unicorn, sabado)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _3222)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, domingo)
   Exit: (14) dice_verdad(unicorn, domingo)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Call: (13) reclama_identidad(persona2, _9376)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, domingo)
   Exit: (14) dice_verdad(lion, domingo)
   Exit: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Exit: (12) problema_tweedle(tweedledum, tweedledee, unicorn, lion, domingo)
   Call: (12) fail
   Fail: (12) fail
   Redo: (14) dice_verdad(lion, domingo)
   Fail: (14) dice_verdad(lion, domingo)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Redo: (12) problema_tweedle(_50, _52, _54, _56, _58)
   Call: (13) _50=tweedledee
   Exit: (13) tweedledee=tweedledee
   Call: (13) _52=tweedledum
   Exit: (13) tweedledum=tweedledum
   Call: (13) tweedledee\=tweedledum
   Exit: (13) tweedledee\=tweedledum
   Call: (13) _54=lion
   Exit: (13) lion=lion
   Call: (13) _56=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) lion\=unicorn
   Exit: (13) lion\=unicorn
   Call: (13) dia(_58)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _37634)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, lunes)
   Exit: (14) miente(lion, lunes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, lunes)
   Call: (13) reclama_identidad(persona2, _48716)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, lunes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, lunes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(unicorn, lunes)
   Fail: (14) miente(unicorn, lunes)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, lunes)
   Redo: (13) dia(_58)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _61014)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, martes)
   Exit: (14) miente(lion, martes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, martes)
   Call: (13) reclama_identidad(persona2, _6926)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, martes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, martes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(unicorn, martes)
   Fail: (14) miente(unicorn, martes)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, martes)
   Redo: (13) dia(_58)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _19224)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, miercoles)
   Exit: (14) miente(lion, miercoles)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, miercoles)
   Call: (13) reclama_identidad(persona2, _30306)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, miercoles)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, miercoles)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(unicorn, miercoles)
   Fail: (14) miente(unicorn, miercoles)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, miercoles)
   Redo: (13) dia(_58)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _42604)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, jueves)
   Fail: (14) miente(lion, jueves)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _54902)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, viernes)
   Fail: (14) miente(lion, viernes)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _1990)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, sabado)
   Fail: (14) miente(lion, sabado)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _14288)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, domingo)
   Fail: (14) miente(lion, domingo)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, domingo)
   Redo: (12) problema_tweedle(tweedledee, tweedledum, _54, _56, _58)
   Call: (13) _54=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) _56=lion
   Exit: (13) lion=lion
   Call: (13) unicorn\=lion
   Exit: (13) unicorn\=lion
   Call: (13) dia(_58)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _30882)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, lunes)
   Fail: (14) miente(unicorn, lunes)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, lunes)
   Redo: (13) dia(_58)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _43180)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, martes)
   Fail: (14) miente(unicorn, martes)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, martes)
   Redo: (13) dia(_58)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _55478)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, miercoles)
   Fail: (14) miente(unicorn, miercoles)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, miercoles)
   Redo: (13) dia(_58)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _2602)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, jueves)
   Exit: (14) miente(unicorn, jueves)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, jueves)
   Call: (13) reclama_identidad(persona2, _13684)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, jueves)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, jueves)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(lion, jueves)
   Fail: (14) miente(lion, jueves)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _25982)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, viernes)
   Exit: (14) miente(unicorn, viernes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, viernes)
   Call: (13) reclama_identidad(persona2, _37064)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, viernes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, viernes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(lion, viernes)
   Fail: (14) miente(lion, viernes)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _49362)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, sabado)
   Exit: (14) miente(unicorn, sabado)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, sabado)
   Call: (13) reclama_identidad(persona2, _60444)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, sabado)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, sabado)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(lion, sabado)
   Fail: (14) miente(lion, sabado)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _7520)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, domingo)
   Fail: (14) miente(unicorn, domingo)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, domingo)
   Fail: (12) problema_tweedle(_50, _52, _54, _56, _58)
^  Fail: (10) catch(user:(problema_tweedle(_50, _52, _54, _56, _58), fail), _70, user:(format(user_error, '~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n', [_70]), fail))
   Call: (11) push_msg(init_goal_failed(failed, 'set_prolog_flag(verbose_load, false), consult(\'/tmp/tmpjhdu7np4.pl\'), leash(-all), trace, catch((problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro), fail), E, (format(user_error, \'~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n\', [E]), fail)), halt.'), _19866)
   Exit: (11) push_msg(init_goal_failed(failed, 'set_prolog_flag(verbose_load, false), consult(\'/tmp/tmpjhdu7np4.pl\'), leash(-all), trace, catch((problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro), fail), E, (format(user_error, \'~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n\', [E]), fail)), halt.'), [])
   Call: (10) pop_msg([])
   Exit: (10) pop_msg([])

--- Fin de traza cruda ---
INFO: Checkpoint guardado: checkpoints/misa_j_trace_cycle0_Tweedledum_y_Tweedledee_visitaban_frecuentemente_e.pkl

--- CICLO DE REFINAMIENTO 2 / 3 ---

INFO: Cláusula Objetivo Principal: problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro).
INFO: Checkpoint no encontrado: checkpoints/misa_j_trace_cycle1_Tweedledum_y_Tweedledee_visitaban_frecuentemente_e.pkl. Se ejecutará el módulo correspondiente.

--- Ejecutando MISA-J (CFCS) ---
Programa Prolog: dia(lunes).
dia(martes).
dia(miercoles).
dia(jueves).
dia(viernes).
dia(sabado).
dia(domingo).
tipo(lion).
tipo(unicorn).
identidad(tweedledum).
identidad(tweedledee).
dice_verdad(lion, jueves).
dice_verdad(lion, viernes).
dice_verdad(lion, sabado).
dice_verdad(lion, domingo).
miente(lion, lunes).
miente(lion, martes).
miente(lion, miercoles).
dice_verdad(unicorn, lunes).
dice_verdad(unicorn, martes).
dice_verdad(unicorn, miercoles).
dice_verdad(unicorn, domingo).
miente(unicorn, jueves).
miente(unicorn, viernes).
miente(unicorn, sabado).
reclama_identidad(persona1, tweedledum).
reclama_identidad(persona2, tweedledee).
afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada) :- IdentidadReal = IdentidadReclamada.
afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada) :- \+ afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada).
es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :- afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada), dice_verdad(TipoPersona, Dia).
es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :- afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada), miente(TipoPersona, Dia).
problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro) :- (Identidad1 = tweedledum, Identidad2 = tweedledee ; Identidad1 = tweedledee, Identidad2 = tweedledum), Identidad1 \= Identidad2, (Tipo1 = lion, Tipo2 = unicorn ; Tipo1 = unicorn, Tipo2 = lion), Tipo1 \= Tipo2, dia(DiaEncuentro), reclama_identidad(persona1, Reclama1), es_consistente_enunciado(persona1, Identidad1, Tipo1, Reclama1, DiaEncuentro), reclama_identidad(persona2, Reclama2), es_consistente_enunciado(persona2, Identidad2, Tipo2, Reclama2, DiaEncuentro).
--- Traza cruda de Prolog ---
Warning: /tmp/tmprgko2u92.pl:19:
Warning:    Clauses of dice_verdad/2 are not together in the source-file
Warning:    Earlier definition at /tmp/tmprgko2u92.pl:12
Warning:    Current predicate: miente/2
Warning:    Use :- discontiguous dice_verdad/2. to suppress this message
Warning: /tmp/tmprgko2u92.pl:23:
Warning:    Clauses of miente/2 are not together in the source-file
Warning:    Earlier definition at /tmp/tmprgko2u92.pl:16
Warning:    Current predicate: dice_verdad/2
Warning:    Use :- discontiguous miente/2. to suppress this message
Warning: /tmp/tmprgko2u92.pl:28:
Warning:    Singleton variables: [Persona]
^  Call: (10) catch((problema_tweedle(_4664, _4666, _4668, _4670, _4672), fail), _4684, (format(user_error, '~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n', [_4684]), fail))
   Call: (12) problema_tweedle(_4664, _4666, _4668, _4670, _4672)
   Call: (13) _4664=tweedledum
   Exit: (13) tweedledum=tweedledum
   Call: (13) _4666=tweedledee
   Exit: (13) tweedledee=tweedledee
   Call: (13) tweedledum\=tweedledee
   Exit: (13) tweedledum\=tweedledee
   Call: (13) _4668=lion
   Exit: (13) lion=lion
   Call: (13) _4670=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) lion\=unicorn
   Exit: (13) lion\=unicorn
   Call: (13) dia(_4672)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _26300)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, lunes)
   Fail: (14) dice_verdad(lion, lunes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, lunes)
   Redo: (13) dia(_4672)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _37982)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, martes)
   Fail: (14) dice_verdad(lion, martes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, martes)
   Redo: (13) dia(_4672)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _49664)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, miercoles)
   Fail: (14) dice_verdad(lion, miercoles)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, miercoles)
   Redo: (13) dia(_4672)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _61346)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, jueves)
   Exit: (14) dice_verdad(lion, jueves)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Call: (13) reclama_identidad(persona2, _2446)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, jueves)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, jueves)
   Fail: (14) dice_verdad(unicorn, jueves)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, jueves)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, jueves)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _19064)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, viernes)
   Exit: (14) dice_verdad(lion, viernes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Call: (13) reclama_identidad(persona2, _25218)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, viernes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, viernes)
   Fail: (14) dice_verdad(unicorn, viernes)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, viernes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, viernes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _41836)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, sabado)
   Exit: (14) dice_verdad(lion, sabado)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Call: (13) reclama_identidad(persona2, _47990)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, sabado)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, sabado)
   Fail: (14) dice_verdad(unicorn, sabado)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, sabado)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, sabado)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _64608)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, domingo)
   Exit: (14) dice_verdad(lion, domingo)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Call: (13) reclama_identidad(persona2, _5668)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, domingo)
   Exit: (14) dice_verdad(unicorn, domingo)
   Exit: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Exit: (12) problema_tweedle(tweedledum, tweedledee, lion, unicorn, domingo)
   Call: (12) fail
   Fail: (12) fail
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Redo: (14) dice_verdad(lion, domingo)
   Fail: (14) dice_verdad(lion, domingo)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Redo: (12) problema_tweedle(tweedledum, tweedledee, _54, _56, _58)
   Call: (13) _54=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) _56=lion
   Exit: (13) lion=lion
   Call: (13) unicorn\=lion
   Exit: (13) unicorn\=lion
   Call: (13) dia(_58)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _30254)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, lunes)
   Exit: (14) dice_verdad(unicorn, lunes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Call: (13) reclama_identidad(persona2, _36408)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, lunes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, lunes)
   Fail: (14) dice_verdad(lion, lunes)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, lunes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, lunes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Redo: (13) dia(_58)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _53026)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, martes)
   Exit: (14) dice_verdad(unicorn, martes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Call: (13) reclama_identidad(persona2, _59180)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, martes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, martes)
   Fail: (14) dice_verdad(lion, martes)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, martes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, martes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Redo: (13) dia(_58)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _10616)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, miercoles)
   Exit: (14) dice_verdad(unicorn, miercoles)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Call: (13) reclama_identidad(persona2, _16770)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, miercoles)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, miercoles)
   Fail: (14) dice_verdad(lion, miercoles)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, miercoles)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, miercoles)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Redo: (13) dia(_58)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _33388)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, jueves)
   Fail: (14) dice_verdad(unicorn, jueves)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _45070)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, viernes)
   Fail: (14) dice_verdad(unicorn, viernes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _56752)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, sabado)
   Fail: (14) dice_verdad(unicorn, sabado)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _3222)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, domingo)
   Exit: (14) dice_verdad(unicorn, domingo)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Call: (13) reclama_identidad(persona2, _9376)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, domingo)
   Exit: (14) dice_verdad(lion, domingo)
   Exit: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Exit: (12) problema_tweedle(tweedledum, tweedledee, unicorn, lion, domingo)
   Call: (12) fail
   Fail: (12) fail
   Redo: (14) dice_verdad(lion, domingo)
   Fail: (14) dice_verdad(lion, domingo)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Redo: (12) problema_tweedle(_50, _52, _54, _56, _58)
   Call: (13) _50=tweedledee
   Exit: (13) tweedledee=tweedledee
   Call: (13) _52=tweedledum
   Exit: (13) tweedledum=tweedledum
   Call: (13) tweedledee\=tweedledum
   Exit: (13) tweedledee\=tweedledum
   Call: (13) _54=lion
   Exit: (13) lion=lion
   Call: (13) _56=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) lion\=unicorn
   Exit: (13) lion\=unicorn
   Call: (13) dia(_58)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _37634)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, lunes)
   Exit: (14) miente(lion, lunes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, lunes)
   Call: (13) reclama_identidad(persona2, _48716)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, lunes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, lunes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(unicorn, lunes)
   Fail: (14) miente(unicorn, lunes)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, lunes)
   Redo: (13) dia(_58)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _61014)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, martes)
   Exit: (14) miente(lion, martes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, martes)
   Call: (13) reclama_identidad(persona2, _6926)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, martes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, martes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(unicorn, martes)
   Fail: (14) miente(unicorn, martes)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, martes)
   Redo: (13) dia(_58)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _19224)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, miercoles)
   Exit: (14) miente(lion, miercoles)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, miercoles)
   Call: (13) reclama_identidad(persona2, _30306)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, miercoles)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, miercoles)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(unicorn, miercoles)
   Fail: (14) miente(unicorn, miercoles)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, miercoles)
   Redo: (13) dia(_58)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _42604)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, jueves)
   Fail: (14) miente(lion, jueves)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _54902)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, viernes)
   Fail: (14) miente(lion, viernes)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _1990)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, sabado)
   Fail: (14) miente(lion, sabado)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _14288)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, domingo)
   Fail: (14) miente(lion, domingo)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, domingo)
   Redo: (12) problema_tweedle(tweedledee, tweedledum, _54, _56, _58)
   Call: (13) _54=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) _56=lion
   Exit: (13) lion=lion
   Call: (13) unicorn\=lion
   Exit: (13) unicorn\=lion
   Call: (13) dia(_58)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _30882)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, lunes)
   Fail: (14) miente(unicorn, lunes)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, lunes)
   Redo: (13) dia(_58)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _43180)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, martes)
   Fail: (14) miente(unicorn, martes)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, martes)
   Redo: (13) dia(_58)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _55478)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, miercoles)
   Fail: (14) miente(unicorn, miercoles)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, miercoles)
   Redo: (13) dia(_58)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _2602)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, jueves)
   Exit: (14) miente(unicorn, jueves)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, jueves)
   Call: (13) reclama_identidad(persona2, _13684)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, jueves)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, jueves)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(lion, jueves)
   Fail: (14) miente(lion, jueves)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _25982)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, viernes)
   Exit: (14) miente(unicorn, viernes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, viernes)
   Call: (13) reclama_identidad(persona2, _37064)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, viernes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, viernes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(lion, viernes)
   Fail: (14) miente(lion, viernes)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _49362)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, sabado)
   Exit: (14) miente(unicorn, sabado)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, sabado)
   Call: (13) reclama_identidad(persona2, _60444)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, sabado)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, sabado)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(lion, sabado)
   Fail: (14) miente(lion, sabado)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _7520)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, domingo)
   Fail: (14) miente(unicorn, domingo)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, domingo)
   Fail: (12) problema_tweedle(_50, _52, _54, _56, _58)
^  Fail: (10) catch(user:(problema_tweedle(_50, _52, _54, _56, _58), fail), _70, user:(format(user_error, '~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n', [_70]), fail))
   Call: (11) push_msg(init_goal_failed(failed, 'set_prolog_flag(verbose_load, false), consult(\'/tmp/tmprgko2u92.pl\'), leash(-all), trace, catch((problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro), fail), E, (format(user_error, \'~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n\', [E]), fail)), halt.'), _19866)
   Exit: (11) push_msg(init_goal_failed(failed, 'set_prolog_flag(verbose_load, false), consult(\'/tmp/tmprgko2u92.pl\'), leash(-all), trace, catch((problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro), fail), E, (format(user_error, \'~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n\', [E]), fail)), halt.'), [])
   Call: (10) pop_msg([])
   Exit: (10) pop_msg([])

--- Fin de traza cruda ---
INFO: Checkpoint guardado: checkpoints/misa_j_trace_cycle1_Tweedledum_y_Tweedledee_visitaban_frecuentemente_e.pkl

--- CICLO DE REFINAMIENTO 3 / 3 ---

INFO: Cláusula Objetivo Principal: problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro).
INFO: Checkpoint no encontrado: checkpoints/misa_j_trace_cycle2_Tweedledum_y_Tweedledee_visitaban_frecuentemente_e.pkl. Se ejecutará el módulo correspondiente.

--- Ejecutando MISA-J (CFCS) ---
Programa Prolog: dia(lunes).
dia(martes).
dia(miercoles).
dia(jueves).
dia(viernes).
dia(sabado).
dia(domingo).
tipo(lion).
tipo(unicorn).
identidad(tweedledum).
identidad(tweedledee).
dice_verdad(lion, jueves).
dice_verdad(lion, viernes).
dice_verdad(lion, sabado).
dice_verdad(lion, domingo).
miente(lion, lunes).
miente(lion, martes).
miente(lion, miercoles).
dice_verdad(unicorn, lunes).
dice_verdad(unicorn, martes).
dice_verdad(unicorn, miercoles).
dice_verdad(unicorn, domingo).
miente(unicorn, jueves).
miente(unicorn, viernes).
miente(unicorn, sabado).
reclama_identidad(persona1, tweedledum).
reclama_identidad(persona2, tweedledee).
afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada) :- IdentidadReal = IdentidadReclamada.
afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada) :- \+ afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada).
es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :- afirmacion_es_verdadera(Persona, IdentidadReal, IdentidadReclamada), dice_verdad(TipoPersona, Dia).
es_consistente_enunciado(Persona, IdentidadReal, TipoPersona, IdentidadReclamada, Dia) :- afirmacion_es_falsa(Persona, IdentidadReal, IdentidadReclamada), miente(TipoPersona, Dia).
problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro) :- (Identidad1 = tweedledum, Identidad2 = tweedledee ; Identidad1 = tweedledee, Identidad2 = tweedledum), Identidad1 \= Identidad2, (Tipo1 = lion, Tipo2 = unicorn ; Tipo1 = unicorn, Tipo2 = lion), Tipo1 \= Tipo2, dia(DiaEncuentro), reclama_identidad(persona1, Reclama1), es_consistente_enunciado(persona1, Identidad1, Tipo1, Reclama1, DiaEncuentro), reclama_identidad(persona2, Reclama2), es_consistente_enunciado(persona2, Identidad2, Tipo2, Reclama2, DiaEncuentro).
--- Traza cruda de Prolog ---
Warning: /tmp/tmp8fl6__qu.pl:19:
Warning:    Clauses of dice_verdad/2 are not together in the source-file
Warning:    Earlier definition at /tmp/tmp8fl6__qu.pl:12
Warning:    Current predicate: miente/2
Warning:    Use :- discontiguous dice_verdad/2. to suppress this message
Warning: /tmp/tmp8fl6__qu.pl:23:
Warning:    Clauses of miente/2 are not together in the source-file
Warning:    Earlier definition at /tmp/tmp8fl6__qu.pl:16
Warning:    Current predicate: dice_verdad/2
Warning:    Use :- discontiguous miente/2. to suppress this message
Warning: /tmp/tmp8fl6__qu.pl:28:
Warning:    Singleton variables: [Persona]
^  Call: (10) catch((problema_tweedle(_4664, _4666, _4668, _4670, _4672), fail), _4684, (format(user_error, '~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n', [_4684]), fail))
   Call: (12) problema_tweedle(_4664, _4666, _4668, _4670, _4672)
   Call: (13) _4664=tweedledum
   Exit: (13) tweedledum=tweedledum
   Call: (13) _4666=tweedledee
   Exit: (13) tweedledee=tweedledee
   Call: (13) tweedledum\=tweedledee
   Exit: (13) tweedledum\=tweedledee
   Call: (13) _4668=lion
   Exit: (13) lion=lion
   Call: (13) _4670=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) lion\=unicorn
   Exit: (13) lion\=unicorn
   Call: (13) dia(_4672)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _26300)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, lunes)
   Fail: (14) dice_verdad(lion, lunes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, lunes)
   Redo: (13) dia(_4672)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _37982)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, martes)
   Fail: (14) dice_verdad(lion, martes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, martes)
   Redo: (13) dia(_4672)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _49664)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, miercoles)
   Fail: (14) dice_verdad(lion, miercoles)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, miercoles)
   Redo: (13) dia(_4672)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _61346)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, jueves)
   Exit: (14) dice_verdad(lion, jueves)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Call: (13) reclama_identidad(persona2, _2446)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, jueves)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, jueves)
   Fail: (14) dice_verdad(unicorn, jueves)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, jueves)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, jueves)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _19064)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, viernes)
   Exit: (14) dice_verdad(lion, viernes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Call: (13) reclama_identidad(persona2, _25218)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, viernes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, viernes)
   Fail: (14) dice_verdad(unicorn, viernes)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, viernes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, viernes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _41836)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, sabado)
   Exit: (14) dice_verdad(lion, sabado)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Call: (13) reclama_identidad(persona2, _47990)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, sabado)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, sabado)
   Fail: (14) dice_verdad(unicorn, sabado)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, sabado)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, sabado)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _64608)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(lion, domingo)
   Exit: (14) dice_verdad(lion, domingo)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Call: (13) reclama_identidad(persona2, _5668)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(unicorn, domingo)
   Exit: (14) dice_verdad(unicorn, domingo)
   Exit: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Exit: (12) problema_tweedle(tweedledum, tweedledee, lion, unicorn, domingo)
   Call: (12) fail
   Fail: (12) fail
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, unicorn, tweedledee, domingo)
   Redo: (14) dice_verdad(lion, domingo)
   Fail: (14) dice_verdad(lion, domingo)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, lion, tweedledum, domingo)
   Redo: (12) problema_tweedle(tweedledum, tweedledee, _54, _56, _58)
   Call: (13) _54=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) _56=lion
   Exit: (13) lion=lion
   Call: (13) unicorn\=lion
   Exit: (13) unicorn\=lion
   Call: (13) dia(_58)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _30254)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, lunes)
   Exit: (14) dice_verdad(unicorn, lunes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Call: (13) reclama_identidad(persona2, _36408)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, lunes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, lunes)
   Fail: (14) dice_verdad(lion, lunes)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, lunes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, lunes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, lunes)
   Redo: (13) dia(_58)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _53026)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, martes)
   Exit: (14) dice_verdad(unicorn, martes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Call: (13) reclama_identidad(persona2, _59180)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, martes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, martes)
   Fail: (14) dice_verdad(lion, martes)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, martes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, martes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, martes)
   Redo: (13) dia(_58)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _10616)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, miercoles)
   Exit: (14) dice_verdad(unicorn, miercoles)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Call: (13) reclama_identidad(persona2, _16770)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, miercoles)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, miercoles)
   Fail: (14) dice_verdad(lion, miercoles)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, miercoles)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, miercoles)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, miercoles)
   Redo: (13) dia(_58)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _33388)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, jueves)
   Fail: (14) dice_verdad(unicorn, jueves)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _45070)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, viernes)
   Fail: (14) dice_verdad(unicorn, viernes)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _56752)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, sabado)
   Fail: (14) dice_verdad(unicorn, sabado)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _3222)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (15) tweedledum=tweedledum
   Exit: (15) tweedledum=tweedledum
   Exit: (14) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (14) dice_verdad(unicorn, domingo)
   Exit: (14) dice_verdad(unicorn, domingo)
   Exit: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Call: (13) reclama_identidad(persona2, _9376)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (15) tweedledee=tweedledee
   Exit: (15) tweedledee=tweedledee
   Exit: (14) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (14) dice_verdad(lion, domingo)
   Exit: (14) dice_verdad(lion, domingo)
   Exit: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Exit: (12) problema_tweedle(tweedledum, tweedledee, unicorn, lion, domingo)
   Call: (12) fail
   Fail: (12) fail
   Redo: (14) dice_verdad(lion, domingo)
   Fail: (14) dice_verdad(lion, domingo)
   Redo: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Call: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Call: (16) tweedledee=tweedledee
   Exit: (16) tweedledee=tweedledee
   Exit: (15) afirmacion_es_verdadera(persona2, tweedledee, tweedledee)
   Fail: (14) afirmacion_es_falsa(persona2, tweedledee, tweedledee)
   Fail: (13) es_consistente_enunciado(persona2, tweedledee, lion, tweedledee, domingo)
   Redo: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Call: (16) tweedledum=tweedledum
   Exit: (16) tweedledum=tweedledum
   Exit: (15) afirmacion_es_verdadera(persona1, tweedledum, tweedledum)
   Fail: (14) afirmacion_es_falsa(persona1, tweedledum, tweedledum)
   Fail: (13) es_consistente_enunciado(persona1, tweedledum, unicorn, tweedledum, domingo)
   Redo: (12) problema_tweedle(_50, _52, _54, _56, _58)
   Call: (13) _50=tweedledee
   Exit: (13) tweedledee=tweedledee
   Call: (13) _52=tweedledum
   Exit: (13) tweedledum=tweedledum
   Call: (13) tweedledee\=tweedledum
   Exit: (13) tweedledee\=tweedledum
   Call: (13) _54=lion
   Exit: (13) lion=lion
   Call: (13) _56=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) lion\=unicorn
   Exit: (13) lion\=unicorn
   Call: (13) dia(_58)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _37634)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, lunes)
   Exit: (14) miente(lion, lunes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, lunes)
   Call: (13) reclama_identidad(persona2, _48716)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, lunes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, lunes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(unicorn, lunes)
   Fail: (14) miente(unicorn, lunes)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, lunes)
   Redo: (13) dia(_58)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _61014)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, martes)
   Exit: (14) miente(lion, martes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, martes)
   Call: (13) reclama_identidad(persona2, _6926)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, martes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, martes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(unicorn, martes)
   Fail: (14) miente(unicorn, martes)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, martes)
   Redo: (13) dia(_58)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _19224)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, miercoles)
   Exit: (14) miente(lion, miercoles)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, miercoles)
   Call: (13) reclama_identidad(persona2, _30306)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, miercoles)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, miercoles)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(unicorn, miercoles)
   Fail: (14) miente(unicorn, miercoles)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, unicorn, tweedledee, miercoles)
   Redo: (13) dia(_58)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _42604)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, jueves)
   Fail: (14) miente(lion, jueves)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _54902)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, viernes)
   Fail: (14) miente(lion, viernes)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _1990)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, sabado)
   Fail: (14) miente(lion, sabado)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _14288)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(lion, domingo)
   Fail: (14) miente(lion, domingo)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, lion, tweedledum, domingo)
   Redo: (12) problema_tweedle(tweedledee, tweedledum, _54, _56, _58)
   Call: (13) _54=unicorn
   Exit: (13) unicorn=unicorn
   Call: (13) _56=lion
   Exit: (13) lion=lion
   Call: (13) unicorn\=lion
   Exit: (13) unicorn\=lion
   Call: (13) dia(_58)
   Exit: (13) dia(lunes)
   Call: (13) reclama_identidad(persona1, _30882)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, lunes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, lunes)
   Fail: (14) miente(unicorn, lunes)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, lunes)
   Redo: (13) dia(_58)
   Exit: (13) dia(martes)
   Call: (13) reclama_identidad(persona1, _43180)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, martes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, martes)
   Fail: (14) miente(unicorn, martes)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, martes)
   Redo: (13) dia(_58)
   Exit: (13) dia(miercoles)
   Call: (13) reclama_identidad(persona1, _55478)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, miercoles)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, miercoles)
   Fail: (14) miente(unicorn, miercoles)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, miercoles)
   Redo: (13) dia(_58)
   Exit: (13) dia(jueves)
   Call: (13) reclama_identidad(persona1, _2602)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, jueves)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, jueves)
   Exit: (14) miente(unicorn, jueves)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, jueves)
   Call: (13) reclama_identidad(persona2, _13684)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, jueves)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, jueves)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(lion, jueves)
   Fail: (14) miente(lion, jueves)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, jueves)
   Redo: (13) dia(_58)
   Exit: (13) dia(viernes)
   Call: (13) reclama_identidad(persona1, _25982)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, viernes)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, viernes)
   Exit: (14) miente(unicorn, viernes)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, viernes)
   Call: (13) reclama_identidad(persona2, _37064)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, viernes)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, viernes)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(lion, viernes)
   Fail: (14) miente(lion, viernes)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, viernes)
   Redo: (13) dia(_58)
   Exit: (13) dia(sabado)
   Call: (13) reclama_identidad(persona1, _49362)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, sabado)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, sabado)
   Exit: (14) miente(unicorn, sabado)
   Exit: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, sabado)
   Call: (13) reclama_identidad(persona2, _60444)
   Exit: (13) reclama_identidad(persona2, tweedledee)
   Call: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, sabado)
   Call: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (15) tweedledum=tweedledee
   Fail: (15) tweedledum=tweedledee
   Fail: (14) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, sabado)
   Call: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Call: (16) tweedledum=tweedledee
   Fail: (16) tweedledum=tweedledee
   Fail: (15) afirmacion_es_verdadera(persona2, tweedledum, tweedledee)
   Redo: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Exit: (14) afirmacion_es_falsa(persona2, tweedledum, tweedledee)
   Call: (14) miente(lion, sabado)
   Fail: (14) miente(lion, sabado)
   Fail: (13) es_consistente_enunciado(persona2, tweedledum, lion, tweedledee, sabado)
   Redo: (13) dia(_58)
   Exit: (13) dia(domingo)
   Call: (13) reclama_identidad(persona1, _7520)
   Exit: (13) reclama_identidad(persona1, tweedledum)
   Call: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (15) tweedledee=tweedledum
   Fail: (15) tweedledee=tweedledum
   Fail: (14) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, domingo)
   Call: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Call: (16) tweedledee=tweedledum
   Fail: (16) tweedledee=tweedledum
   Fail: (15) afirmacion_es_verdadera(persona1, tweedledee, tweedledum)
   Redo: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Exit: (14) afirmacion_es_falsa(persona1, tweedledee, tweedledum)
   Call: (14) miente(unicorn, domingo)
   Fail: (14) miente(unicorn, domingo)
   Fail: (13) es_consistente_enunciado(persona1, tweedledee, unicorn, tweedledum, domingo)
   Fail: (12) problema_tweedle(_50, _52, _54, _56, _58)
^  Fail: (10) catch(user:(problema_tweedle(_50, _52, _54, _56, _58), fail), _70, user:(format(user_error, '~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n', [_70]), fail))
   Call: (11) push_msg(init_goal_failed(failed, 'set_prolog_flag(verbose_load, false), consult(\'/tmp/tmp8fl6__qu.pl\'), leash(-all), trace, catch((problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro), fail), E, (format(user_error, \'~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n\', [E]), fail)), halt.'), _19866)
   Exit: (11) push_msg(init_goal_failed(failed, 'set_prolog_flag(verbose_load, false), consult(\'/tmp/tmp8fl6__qu.pl\'), leash(-all), trace, catch((problema_tweedle(Identidad1, Identidad2, Tipo1, Tipo2, DiaEncuentro), fail), E, (format(user_error, \'~N### CAUGHT_EXCEPTION ###~n~w~n### END_EXCEPTION ###~n\', [E]), fail)), halt.'), [])
   Call: (10) pop_msg([])
   Exit: (10) pop_msg([])

--- Fin de traza cruda ---
INFO: Checkpoint guardado: checkpoints/misa_j_trace_cycle2_Tweedledum_y_Tweedledee_visitaban_frecuentemente_e.pkl

======================================================================
FIN DEL PROCESAMIENTO PARA PROBLEMA 5
======================================================================
Presiona Enter para continuar con el siguiente problema...